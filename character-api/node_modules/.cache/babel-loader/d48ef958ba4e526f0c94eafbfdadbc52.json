{"ast":null,"code":"var _jsxFileName = \"/Users/G/Documents/Foundations/JSCRIPT-300A/Class5/week5-assignment/character-api/src/PokemonCard.js\";\nimport React from 'react';\nimport './App.css'; // import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch,\n//   Link\n// } from 'react-router-dom';\n\nclass Pokemon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      isLoading: true,\n      hasError: false\n    };\n  } // Which can then be access in match.params\n  // const Pokemon = (props) => {\n  //     return (\n  //     <div>\n  //         <h1>Pokemon id: {props.match.params.id}</h1>\n  //         <h2>{this.state.data}</h2>\n  //     </div>\n  //     );\n  // };\n  // render (){\n  //     return(\n  //     );\n  // }\n\n\n  componentDidMount() {\n    // TODO edit URL\n    fetch('https://pokeapi.co/api/v2/pokemon/' + this.props.match.params.id).then(response => {\n      console.log(response);\n      console.log(response.json());\n      console.log(response.json());\n      console.log(response.JSON.stringify()); // data can be `string` or {object}!\n\n      return response;\n    }).then(res => {\n      console.log(res);\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      console.log(data.name);\n      this.setState({\n        data: data,\n        isLoading: false\n      });\n      console.log(this.state.data);\n      console.log('Success:', JSON.stringify(data));\n    }) //   .then(data => {\n    //     console.log(data);\n    //     console.log(data.name);\n    //     this.setState({\n    //       data: data,\n    //       isLoading: false\n    //     });\n    //     console.log(this.state.data);\n    //   })\n    .catch(error => {\n      this.setState({\n        hasError: true,\n        isLoading: false\n      });\n      console.log(this.state.data); //\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    if (this.state.hasError) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"ERROR, please reload and try again\");\n    }\n\n    const data = this.state.data; //   <>\n    //   <ul>\n    //     {pokemonGroup.map(({ name, id }) => (\n    //       <li key={id}>\n    //         <Link to={`${match.url}/${name}`}>{name}</Link>\n    //       </li>\n    //     ))}\n    //   </ul>\n    //   <Route path={`${match.url}/:name`} component={PokemonGroup} />\n    //   <hr />\n    // </>\n    // {data.sprites.front_default}\n    // {data.name}\n    // {data.species}\n    // {data.height}\n    // {data.weight}\n    // {data.id}\n    // {data.types}\n    // {data.abilities}\n\n    function capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, capitalizeFirstLetter(data.name), React.createElement(\"img\", {\n      src: data.sprites.front_default,\n      alt: data.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Pokemon; // const Pokemon = ({ match }) => {\n//   const pokemon = pokemonGroup.find(pokemon => pokemon.name === match.params.name);\n//   return (\n//     <div>\n//       {pokemon.sprites.front_default}\n//       {pokemon.name}\n//       {pokemon.species}\n//       {pokemon.height}\n//       {pokemon.weight}\n//       {pokemon.id}\n//       {pokemon.types}\n//       {pokemon.forms}\n//       {pokemon.abilities}\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["/Users/G/Documents/Foundations/JSCRIPT-300A/Class5/week5-assignment/character-api/src/PokemonCard.js"],"names":["React","Pokemon","Component","constructor","props","state","data","isLoading","hasError","componentDidMount","fetch","match","params","id","then","response","console","log","json","JSON","stringify","res","name","setState","catch","error","render","capitalizeFirstLetter","string","charAt","toUpperCase","slice","sprites","front_default"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch,\n//   Link\n// } from 'react-router-dom';\n\nclass Pokemon extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          data: {},\n          isLoading: true,\n          hasError: false\n        }\n    }\n// Which can then be access in match.params\n    // const Pokemon = (props) => {\n    //     return (\n    //     <div>\n    //         <h1>Pokemon id: {props.match.params.id}</h1>\n    //         <h2>{this.state.data}</h2>\n    //     </div>\n    //     );\n    // };\n\n    // render (){\n    //     return(\n\n    //     );\n    // }\n\n    componentDidMount() {\n        // TODO edit URL\n        fetch('https://pokeapi.co/api/v2/pokemon/' + this.props.match.params.id)\n          .then(response => {\n            console.log(response);\n            console.log(response.json());\n            console.log(response.json());\n            console.log(response.JSON.stringify()); // data can be `string` or {object}!\n            return response;\n        }).then(res => {\n            console.log(res);\n            return res.json();\n        })\n        .then(data => {\n            console.log(data);\n            console.log(data.name);\n            this.setState({\n              data: data,\n              isLoading: false\n            });\n            console.log(this.state.data);\n            console.log('Success:', JSON.stringify(data))\n        })\n\n        //   .then(data => {\n        //     console.log(data);\n        //     console.log(data.name);\n        //     this.setState({\n        //       data: data,\n        //       isLoading: false\n        //     });\n        //     console.log(this.state.data);\n        //   })\n        .catch(error => {\n            this.setState({\n                hasError: true,\n                isLoading: false\n            });\n        console.log(this.state.data);\n    \n         //\n        });}\n\n        render (){\n            if (this.state.isLoading) {\n                return <div>Loading...</div>;\n            }\n    \n            if (this.state.hasError) {\n                return <div>ERROR, please reload and try again</div>;\n            }\n            const data = this.state.data;\n\n            //   <>\n            //   <ul>\n            //     {pokemonGroup.map(({ name, id }) => (\n            //       <li key={id}>\n            //         <Link to={`${match.url}/${name}`}>{name}</Link>\n            //       </li>\n            //     ))}\n            //   </ul>\n            //   <Route path={`${match.url}/:name`} component={PokemonGroup} />\n            //   <hr />\n            // </>\n            // {data.sprites.front_default}\n            // {data.name}\n            // {data.species}\n            // {data.height}\n            // {data.weight}\n            // {data.id}\n            // {data.types}\n            // {data.abilities}\n        function capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n        return (\n            <div>\n                {capitalizeFirstLetter(data.name)}\n                <img src={data.sprites.front_default} alt={data.name} />\n        </div>\n        );\n        \n    }\n }\n\nexport default Pokemon;\n\n    // const Pokemon = ({ match }) => {\n    //   const pokemon = pokemonGroup.find(pokemon => pokemon.name === match.params.name);\n\n    //   return (\n    //     <div>\n    //       {pokemon.sprites.front_default}\n    //       {pokemon.name}\n    //       {pokemon.species}\n    //       {pokemon.height}\n    //       {pokemon.weight}\n    //       {pokemon.id}\n    //       {pokemon.types}\n    //       {pokemon.forms}\n    //       {pokemon.abilities}\n    //     </div>\n    //   );\n    // };"]},"metadata":{},"sourceType":"module"}